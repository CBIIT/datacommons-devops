############################################################################################################################
#     Backend Build
############################################################################################################################

- name: copy application.properties file to /src/main/resources/
  template:
    src: "{{ workspace }}/src/main/resources/application.properties.j2"
    dest: "{{ workspace }}/src/main/resources/application.properties"

- name: build springboot code
  command: mvn package -DskipTests
  args:
    chdir: "{{ workspace }}"

- name: copy Bento-0.0.1.war to ROOT.war
  copy:
    remote_src: yes
    src: "{{ workspace }}/target/Bento-0.0.1.war"
    dest: "{{ workspace }}/target/ROOT.war"

- name: build {{ project_name }}-{{ container_name }} image
  community.docker.docker_image:
    build:
      args:
        ECR_REPO: "{{ container_registry_url }}"
      path: "{{ workspace }}"
      dockerfile: "{{ dockerfile_path }}"
      pull: yes
      nocache: yes
    name: "{{ program }}-{{ project_name }}-{{ container_name }}"
    tag: "{{ image_version }}.{{ build_number }}"
    push: no
    force_source: yes
    source: build

# - name: test image for vulnerabilities
#   block:
#     - name: run trivy scanner on 
#       #command: "trivy image --exit-code 1 --severity HIGH,CRITICAL {{ project_name }}-{{ container_name }}:{{ image_version }}-{{ build_number }}"
#       command: "trivy image --timeout 15m --severity HIGH,CRITICAL {{ project_name }}-{{ container_name }}:{{ image_version }}.{{ build_number }}"
#       register: vuln_results
#   always:
#     - name: echo vulnerability results
#       debug:
#         msg: "{{ vuln_results.stdout_lines }}"

- name: Add {{ project_name }}-{{ container_name }} image to ECR
  docker_image:
    name: "{{ program }}-{{ project_name }}-{{ container_name }}"
    repository: "{{ container_registry_url }}/{{ program }}-{{ project_name }}-{{ container_name }}"
    tag: "{{ image_version }}.{{ build_number }}"
    force_tag: yes
    push: yes
    source: local

- name: Add tag latest to {{ project_name }}-{{container_name}} image
  community.docker.docker_image:
    name: "{{ container_registry_url }}/{{ program }}-{{ project_name }}-{{ container_name }}:{{ image_version }}.{{build_number}}"
    repository: "{{ container_registry_url }}/{{ program }}-{{ project_name }}-{{ container_name }}:latest"
    force_tag: yes
    push: yes
    source: local
