Project_Name,Project_Acronym,Program,Tier,Endpoint_Name,URL,Endpoint_Query,Validation_Text,Private_Location,Slack_Channel,Alert_Email,Monitored_Resources
Clinical Trial Data Commons,ctdc,CRDC,Dev,Portal,https://trialcommons-dev.cancer.gov,,,TRUE,C051XGDRQG6,,opensearch
Clinical Trial Data Commons,ctdc,CRDC,Dev,API,https://trialcommons-dev.cancer.gov/v1/graphql,"var assert = require('assert');

$http.post('https://trialcommons-dev.cancer.gov/v1/graphql/',
  {
    json: {
    query: '{ idsLists { case_ids } }',
    variables: {}
    }
  },

  function (err, response, body) {

    if (err) {
        throw new Error(err);
    }

    console.log('Response:', body);
    console.log('Response:', response.statusCode);
    
    assert.equal(response.statusCode, 200, 'Expected a 200 OK response');    
    assert.ok('case_ids' in body.data.idsLists);
    assert.match(body.data.idsLists.case_ids[0], /CTDC-/);

  }
);",,TRUE,C051XGDRQG6,,opensearch
Clinical Trial Data Commons,ctdc,CRDC,Dev,Files,https://trialcommons-dev.cancer.gov/api/files,,,TRUE,C051XGDRQG6,,opensearch
Clinical Trial Data Commons,ctdc,CRDC,QA,Portal,https://trialcommons-qa.cancer.gov,,,TRUE,C051XGDRQG6,,opensearch
Clinical Trial Data Commons,ctdc,CRDC,QA,API,https://trialcommons-qa.cancer.gov/v1/graphql,"var assert = require('assert');

$http.post('https://trialcommons-qa.cancer.gov/v1/graphql/',
  {
    json: {
    query: '{ idsLists { case_ids } }',
    variables: {}
    }
  },

  function (err, response, body) {
    
    if (err) {
        throw new Error(err);
    }

    console.log('Response:', body);
    console.log('Response:', response.statusCode);

    assert.equal(response.statusCode, 200, 'Expected a 200 OK response');    
    assert.ok('case_ids' in body.data.idsLists);
    assert.match(body.data.idsLists.case_ids[0], /CTDC-/);

  }
);",,TRUE,C051XGDRQG6,,opensearch
Clinical Trial Data Commons,ctdc,CRDC,QA,Files,https://trialcommons-qa.cancer.gov/api/files,,,TRUE,C051XGDRQG6,,opensearch
Canine Data Commons,icdc,CRDC,Dev,Portal,https://caninecommons-dev.cancer.gov,,,TRUE,C04DYU071MG,,opensearch
Canine Data Commons,icdc,CRDC,Dev,API,https://caninecommons-dev.cancer.gov/v1/graphql/,"var assert = require('assert');

$http.post('https://caninecommons-dev.cancer.gov/v1/graphql/',
  {
    json: {
    query: '{ numberOfStudies }'
    }
  },

  function (err, response, body) {
    
    if (err) {
        throw new Error(err);
    }

    console.log('Response:', body);
    console.log('Response:', response.statusCode);

    assert.equal(response.statusCode, 200, 'Expected a 200 OK response');    
    assert.ok('numberOfStudies' in body.data);

  }
);",,TRUE,C04DYU071MG,,opensearch
Canine Data Commons,icdc,CRDC,Dev,Files,https://caninecommons-dev.cancer.gov/api/files,,,TRUE,C04DYU071MG,,opensearch
Canine Data Commons,icdc,CRDC,QA,Portal,https://caninecommons-qa.cancer.gov,,,TRUE,C04DYU071MG,,opensearch
Canine Data Commons,icdc,CRDC,QA,API,https://caninecommons-qa.cancer.gov/v1/graphql/,"var assert = require('assert');

$http.post('https://caninecommons-qa.cancer.gov/v1/graphql/',
  {
    json: {
    query: '{ numberOfStudies }'
    }
  },

  function (err, response, body) {
    
    if (err) {
        throw new Error(err);
    }

    console.log('Response:', body);
    console.log('Response:', response.statusCode);

    assert.equal(response.statusCode, 200, 'Expected a 200 OK response');    
    assert.ok('numberOfStudies' in body.data);

  }
);",,TRUE,C04DYU071MG,,opensearch
Canine Data Commons,icdc,CRDC,QA,Files,https://caninecommons-qa.cancer.gov/api/files,,,TRUE,C04DYU071MG,,opensearch
Canine Data Commons,icdc,CRDC,Stage,Portal,https://caninecommons-stage.cancer.gov,,,TRUE,C04DYU071MG,,opensearch
Canine Data Commons,icdc,CRDC,Stage,API,https://caninecommons-stage.cancer.gov/v1/graphql/,"var assert = require('assert');

$http.post('https://caninecommons-stage.cancer.gov/v1/graphql/',
  {
    json: {
    query: '{ numberOfStudies }'
    }
  },

  function (err, response, body) {
    
    if (err) {
        throw new Error(err);
    }

    console.log('Response:', body);
    console.log('Response:', response.statusCode);

    assert.equal(response.statusCode, 200, 'Expected a 200 OK response');    
    assert.ok('numberOfStudies' in body.data);

  }
);",,TRUE,C04DYU071MG,,opensearch
Canine Data Commons,icdc,CRDC,Stage,Files,https://caninecommons-stage.cancer.gov/api/files,,,TRUE,C04DYU071MG,,opensearch
Canine Data Commons,icdc,CRDC,Prod,Portal,https://caninecommons.cancer.gov,,,FALSE,C04E1C69JBE,,opensearch
Canine Data Commons,icdc,CRDC,Prod,API,https://caninecommons.cancer.gov/v1/graphql/,"var assert = require('assert');

$http.post('https://caninecommons.cancer.gov/v1/graphql/',
  {
    json: {
    query: '{ numberOfStudies }'
    }
  },

  function (err, response, body) {
    
    if (err) {
        throw new Error(err);
    }

    console.log('Response:', body);
    console.log('Response:', response.statusCode);

    assert.equal(response.statusCode, 200, 'Expected a 200 OK response');    
    assert.ok('numberOfStudies' in body.data);

  }
);",,FALSE,C04E1C69JBE,,opensearch
Canine Data Commons,icdc,CRDC,Prod,Files,https://caninecommons.cancer.gov/api/files,,,FALSE,C04E1C69JBE,,opensearch
Molecular Targets Platform,mtp,CCDI,Prod,Portal,https://moleculartargets.ccdi.cancer.gov,,,FALSE,C049Z0RVCCD,,opensearch
Molecular Targets Platform,mtp,CCDI,Prod,API,https://moleculartargets.ccdi.cancer.gov/api/v4/graphql,"var assert = require('assert');

$http.post('https://moleculartargets.ccdi.cancer.gov/api/v4/graphql',
  {
    json: {
      operationName: 'TargetFacetsQuery',
      variables: {
        ensemblId: 'ENSG00000001626',
        aggregationFilters: []
      },
      query: 'query TargetFacetsQuery($ensemblId: String!, $aggregationFilters: [AggregationFilter!]) { target(ensemblId: $ensemblId) { id approvedName associatedDiseases(aggregationFilters: $aggregationFilters) { count aggregations { uniques aggs { name uniques __typename } __typename } __typename } __typename } }'
    }
  },
  function (err, response, body) {
     if (err) {
        throw new Error(err);
    }

    console.log('Response:', body);
    console.log('Response:', response.statusCode);

    assert.equal(response.statusCode, 200, 'Expected a 200 OK response');    
  }
);",,FALSE,C049Z0RVCCD,,opensearch
Index of NCI Studies,ins,CCDI,Dev,Portal,https://studycatalog-dev.cancer.gov,,,TRUE,C04693BUC9M,,opensearch
Index of NCI Studies,ins,CCDI,Dev,API,https://studycatalog-dev.cancer.gov/v1/graphql,"var assert = require('assert');

$http.post('https://studycatalog-dev.cancer.gov/v1/graphql/',
  {
    json: {
    query: '{ idsLists { case_ids } }',
    variables: {}
    }
  },

  function (err, response, body) {
    
    if (err) {
        throw new Error(err);
    }

    console.log('Response:', body);
    console.log('Response:', response.statusCode);

    assert.equal(response.statusCode, 200, 'Expected a 200 OK response');    
    assert.ok('case_ids' in body.data.idsLists);
    assert.match(body.data.idsLists.case_ids[0], /INS-/);
  }
);",,TRUE,C04693BUC9M,,opensearch
Index of NCI Studies,ins,CCDI,QA,Portal,https://studycatalog-qa.cancer.gov,,,TRUE,C04693BUC9M,,opensearch
Index of NCI Studies,ins,CCDI,QA,API,https://studycatalog-qa.cancer.gov/v1/graphql,"var assert = require('assert');

$http.post('https://studycatalog-qa.cancer.gov/v1/graphql/',
  {
    json: {
    query: '{ idsLists { case_ids } }',
    variables: {}
    }
  },

  function (err, response, body) {
    
    if (err) {
        throw new Error(err);
    }

    console.log('Response:', body);
    console.log('Response:', response.statusCode);

    assert.equal(response.statusCode, 200, 'Expected a 200 OK response');    
    assert.ok('case_ids' in body.data.idsLists);
    assert.match(body.data.idsLists.case_ids[0], /INS-/);
  }
);",,TRUE,C04693BUC9M,,opensearch
Index of NCI Studies,ins,CCDI,Stage,Portal,https://studycatalog-stage.cancer.gov,,,TRUE,C04693BUC9M,,opensearch
Index of NCI Studies,ins,CCDI,Stage,API,https://studycatalog-stage.cancer.gov/v1/graphql,"var assert = require('assert');

$http.post('https://studycatalog-stage.cancer.gov/v1/graphql/',
  {
    json: {
    query: '{ idsLists { case_ids } }',
    variables: {}
    }
  },

  function (err, response, body) {
    
    if (err) {
        throw new Error(err);
    }

    console.log('Response:', body);
    console.log('Response:', response.statusCode);

    assert.equal(response.statusCode, 200, 'Expected a 200 OK response');    
    assert.ok('case_ids' in body.data.idsLists);
    assert.match(body.data.idsLists.case_ids[0], /INS-/);
  }
);",,TRUE,C04693BUC9M,,opensearch
Index of NCI Studies,ins,CCDI,Prod,Portal,https://studycatalog.cancer.gov,,,TRUE,C04693BUC9M,,opensearch
Index of NCI Studies,ins,CCDI,Prod,API,https://studycatalog.cancer.gov/v1/graphql,"var assert = require('assert');

$http.post('https://studycatalog.cancer.gov/v1/graphql/',
  {
    json: {
    query: '{ idsLists { case_ids } }',
    variables: {}
    }
  },

  function (err, response, body) {
    
    if (err) {
        throw new Error(err);
    }

    console.log('Response:', body);
    console.log('Response:', response.statusCode);

    assert.equal(response.statusCode, 200, 'Expected a 200 OK response');    
    assert.ok('case_ids' in body.data.idsLists);
    assert.match(body.data.idsLists.case_ids[0], /INS-/);
  }
);",,TRUE,C04693BUC9M,,opensearch
Childhood Cancer Data Catalog,ccdc,CCDI,Dev,Portal,https://datacatalog-dev.ccdi.cancer.gov,,,TRUE,C049VAP8DEJ,,opensearch
Childhood Cancer Data Catalog,ccdc,CCDI,QA,Portal,https://datacatalog-qa.ccdi.cancer.gov,,,TRUE,C049VAP8DEJ,,opensearch
Childhood Cancer Data Catalog,ccdc,CCDI,Stage,Portal,https://datacatalog-stage.ccdi.cancer.gov,,,TRUE,C049VAP8DEJ,,opensearch
Childhood Cancer Data Catalog,ccdc,CCDI,Prod,Portal,https://datacatalog.ccdi.cancer.gov,,,TRUE,C049VAP8DEJ,,opensearch
Cancer Research Data Commons Hub,crdc-hub,CRDC,Dev,Portal,https://hub-dev.datacommons.cancer.gov,,CRDC,TRUE,C05KUCFPV50,,
Cancer Research Data Commons Hub,crdc-hub,CRDC,Dev,API,https://hub-dev.datacommons.cancer.gov/version,"var assert = require('assert');

$http.get('https://hub-dev.datacommons.cancer.gov/version',
function (err, response, body) { 
    
    if (err) {
        throw new Error(err);
    }

console.log('Response:', body); 
console.log('Response:', response.statusCode); 

assert.equal(response.statusCode, 200, 'Expected a 200 OK response'); 

dateObject = new Date(); 
assert.ok(dateObject.getTime() === dateObject.getTime()); 

} );",,TRUE,C05KUCFPV50,,
Cancer Research Data Commons Hub,crdc-hub,CRDC,QA,Portal,https://hub-qa.datacommons.cancer.gov,,CRDC,TRUE,C05KUCFPV50,,
Cancer Research Data Commons Hub,crdc-hub,CRDC,QA,API,https://hub-qa.datacommons.cancer.gov/version,"var assert = require('assert');

$http.get('https://hub-qa.datacommons.cancer.gov/version',
function (err, response, body) { 
    
    if (err) {
        throw new Error(err);
    }

console.log('Response:', body); 
console.log('Response:', response.statusCode); 

assert.equal(response.statusCode, 200, 'Expected a 200 OK response'); 

dateObject = new Date(); 
assert.ok(dateObject.getTime() === dateObject.getTime()); 

} );",,TRUE,C05KUCFPV50,,
Cancer Research Data Commons Hub,crdc-hub,CRDC,Stage,Portal,https://hub-stage.datacommons.cancer.gov,,CRDC,TRUE,C05KUCFPV50,,
Cancer Research Data Commons Hub,crdc-hub,CRDC,Stage,API,https://hub-stage.datacommons.cancer.gov/version,"var assert = require('assert');

$http.get('https://hub-stage.datacommons.cancer.gov/version',
function (err, response, body) {

    if (err) {
        throw new Error(err);
    }

console.log('Response:', body);
console.log('Response:', response.statusCode);

assert.equal(response.statusCode, 200, 'Expected a 200 OK response');

dateObject = new Date();
assert.ok(dateObject.getTime() === dateObject.getTime());

} );",,TRUE,C05KUCFPV50,,
Cancer Research Data Commons Hub,crdc-hub,CRDC,Prod,Portal,https://hub.datacommons.cancer.gov,,CRDC,FALSE,C05LJ3E72V6,,
Cancer Research Data Commons Hub,crdc-hub,CRDC,Prod,API,https://hub.datacommons.cancer.gov/version,"var assert = require('assert');

$http.get('https://hub.datacommons.cancer.gov/version',
function (err, response, body) {

    if (err) {
        throw new Error(err);
    }

console.log('Response:', body);
console.log('Response:', response.statusCode);

assert.equal(response.statusCode, 200, 'Expected a 200 OK response');

dateObject = new Date();
assert.ok(dateObject.getTime() === dateObject.getTime());

} );",,FALSE,C05LJ3E72V6,,
CCDI Hub,ccdi-hub,CCDI,Dev,Portal,https://ccdi-dev.cancer.gov/,,,TRUE,C061YHQ6MED,,
CCDI Hub,ccdi-hub,CCDI,QA,Portal,https://ccdi-qa.cancer.gov/,,,TRUE,C061YHQ6MED,,
CCDI Hub,ccdi-hub,CCDI,Stage,Portal,https://ccdi-stage.cancer.gov/,,,TRUE,C061YHQ6MED,,
CCDI Hub,ccdi-hub,CCDI,Prod,Portal,https://ccdi.cancer.gov/,,,FALSE,C061YHQ6MED,,
CCDI C3DC,c3dc,CCDI,Dev,Portal,https://clinicalcommons-dev.ccdi.cancer.gov,,,TRUE,C065RHDELPQ,,
CCDI C3DC,c3dc,CCDI,QA,Portal,https://clinicalcommons-qa.ccdi.cancer.gov,,,TRUE,C065RHDELPQ,,
CCDI C3DC,c3dc,CCDI,Stage,Portal,https://clinicalcommons-stage.ccdi.cancer.gov,,,TRUE,C065HLMAM47,,
CCDI C3DC,c3dc,CCDI,Prod,Portal,https://clinicalcommons.ccdi.cancer.gov,,,FALSE,C065HLMAM47,,
Bento,bento,FNL,Dev,Portal,https://bento-dev.bento-tools.org/,,Bento,FALSE,C065PL460CW,,
Bento,bento,FNL,Dev,Files,https://bento-dev.bento-tools.org/api/files/version,,version,FALSE,C065PL460CW,,
Bento,bento,FNL,Dev,API,https://bento-dev.bento-tools.org//v1/public-graphql/,"var assert = require('assert');

$http.post('https://bento-dev.bento-tools.org/v1/public-graphql/',
  {
    json: {
    query: '{publicGlobalSearch(input: ""nct""){program_count}}',
    variables: {}
    }
  },

  function (err, response, body) {

    if (err) {
        throw new Error(err);
    }

    console.log('Response:', body);
    console.log('Response:', response.statusCode);
    
    assert.equal(response.statusCode, 200, 'Expected a 200 OK response');    
    assert.ok('program_count' in body.data.publicGlobalSearch);

  }
);",,FALSE,C065PL460CW,,
Bento,bento,FNL,Dev,API-OS,https://bento-dev.bento-tools.org//v1/public-graphql/,"var assert = require('assert');

$http.post('https://bento-dev.bento-tools.org/v1/public-graphql/',
  {
    json: {
    query: '{numberOfPrograms}',
    variables: {}
    }
  },

  function (err, response, body) {

    if (err) {
        throw new Error(err);
    }

    console.log('Response:', body);
    console.log('Response:', response.statusCode);
    
    assert.equal(response.statusCode, 200, 'Expected a 200 OK response');    
    assert.ok('numberOfPrograms' in body.data);

  }
);",,FALSE,C065PL460CW,,
Bento,bento,FNL,QA,Portal,https://bento-qa.bento-tools.org/,,Bento,FALSE,C06AYDW6S2Z,,
Bento,bento,FNL,QA,Files,https://bento-qa.bento-tools.org/api/files/version,,version,FALSE,C06AYDW6S2Z,,
Bento,bento,FNL,QA,API,https://bento-qa.bento-tools.org//v1/public-graphql/,"var assert = require('assert');

$http.post('https://bento-qa.bento-tools.org/v1/public-graphql/',
  {
    json: {
    query: '{publicGlobalSearch(input: ""nct""){program_count}}',
    variables: {}
    }
  },

  function (err, response, body) {

    if (err) {
        throw new Error(err);
    }

    console.log('Response:', body);
    console.log('Response:', response.statusCode);
    
    assert.equal(response.statusCode, 200, 'Expected a 200 OK response');    
    assert.ok('program_count' in body.data.publicGlobalSearch);

  }
);",,FALSE,C065PL460CW,,
Bento,bento,FNL,QA,API-OS,https://bento-qa.bento-tools.org//v1/public-graphql/,"var assert = require('assert');

$http.post('https://bento-qa.bento-tools.org/v1/public-graphql/',
  {
    json: {
    query: '{numberOfPrograms}',
    variables: {}
    }
  },

  function (err, response, body) {

    if (err) {
        throw new Error(err);
    }

    console.log('Response:', body);
    console.log('Response:', response.statusCode);
    
    assert.equal(response.statusCode, 200, 'Expected a 200 OK response');    
    assert.ok('numberOfPrograms' in body.data);

  }
);",,FALSE,C065PL460CW,,
Bento,bento,FNL,Perf,Portal,https://bento-perf.bento-tools.org/,,Bento,FALSE,C065PL460CW,,
Bento,bento,FNL,Perf,Files,https://bento-perf.bento-tools.org/api/files/version,,version,FALSE,C065PL460CW,,
Bento,bento,FNL,Perf,API,https://bento-perf.bento-tools.org//v1/public-graphql/,"var assert = require('assert');

$http.post('https://bento-perf.bento-tools.org/v1/public-graphql/',
  {
    json: {
    query: '{publicGlobalSearch(input: ""nct""){program_count}}',
    variables: {}
    }
  },

  function (err, response, body) {

    if (err) {
        throw new Error(err);
    }

    console.log('Response:', body);
    console.log('Response:', response.statusCode);
    
    assert.equal(response.statusCode, 200, 'Expected a 200 OK response');    
    assert.ok('program_count' in body.data.publicGlobalSearch);

  }
);",,FALSE,C065PL460CW,,
Bento,bento,FNL,Perf,API-OS,https://bento-perf.bento-tools.org//v1/public-graphql/,"var assert = require('assert');

$http.post('https://bento-perf.bento-tools.org/v1/public-graphql/',
  {
    json: {
    query: '{numberOfPrograms}',
    variables: {}
    }
  },

  function (err, response, body) {

    if (err) {
        throw new Error(err);
    }

    console.log('Response:', body);
    console.log('Response:', response.statusCode);
    
    assert.equal(response.statusCode, 200, 'Expected a 200 OK response');    
    assert.ok('numberOfPrograms' in body.data);

  }
);",,FALSE,C065PL460CW,,
Bento,bento,FNL,Prod,Portal,https://bento-tools.org/,,Bento,FALSE,C06AYDW6S2Z,,
Bento,bento,FNL,Prod,Files,https://bento-tools.org/api/files/version,,version,FALSE,C06AYDW6S2Z,,
Bento,bento,FNL,Prod,API,https://bento-tools.org//v1/public-graphql/,"var assert = require('assert');

$http.post('https://bento-tools.org/v1/public-graphql/',
  {
    json: {
    query: '{publicGlobalSearch(input: ""nct""){program_count}}',
    variables: {}
    }
  },

  function (err, response, body) {

    if (err) {
        throw new Error(err);
    }

    console.log('Response:', body);
    console.log('Response:', response.statusCode);
    
    assert.equal(response.statusCode, 200, 'Expected a 200 OK response');    
    assert.ok('program_count' in body.data.publicGlobalSearch);

  }
);",,FALSE,C06AYDW6S2Z,,
Bento,bento,FNL,Prod,API-OS,https://bento-tools.org//v1/public-graphql/,"var assert = require('assert');

$http.post('https://bento-tools.org/v1/public-graphql/',
  {
    json: {
    query: '{numberOfPrograms}',
    variables: {}
    }
  },

  function (err, response, body) {

    if (err) {
        throw new Error(err);
    }

    console.log('Response:', body);
    console.log('Response:', response.statusCode);
    
    assert.equal(response.statusCode, 200, 'Expected a 200 OK response');    
    assert.ok('numberOfPrograms' in body.data);

  }
);",,FALSE,C06AYDW6S2Z,,
Computation Resources for Cancer Research,CRCR,DOERC,dev,Portal,https://computational-dev.cancer.gov/,,,TRUE,C071J4NEJJ3,NCI-CRCR-development@mail.nih.gov,
Computation Resources for Cancer Research,CRCR,DOERC,qa,Portal,https://computational-qa.cancer.gov/,,,TRUE,C071J4NEJJ3,NCI-CRCR-development@mail.nih.gov,
Computation Resources for Cancer Research,CRCR,DOERC,stage,Portal,https://computational-stage.cancer.gov/,,,TRUE,C071J5E4RU7,NCI-CRCR-development@mail.nih.gov,
Computation Resources for Cancer Research,CRCR,DOERC,prod,Portal,https://computational.cancer.gov/,,,FALSE,C071J5E4RU7,NCI-CRCR-development@mail.nih.gov,