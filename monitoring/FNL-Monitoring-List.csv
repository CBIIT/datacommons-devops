Project_Name,Project_Acronym,Program,Tier,Endpoint_Name,URL,Endpoint_Query,Private_Location,Slack_Channel,,Monitored_Resources
Clinical Trial Data Commons,ctdc,CRDC,Dev,Portal,https://trialcommons-dev.cancer.gov,,TRUE,C051XGDRQG6,,"alb,fargate,opensearch"
Clinical Trial Data Commons,ctdc,CRDC,Dev,API,https://trialcommons-dev.cancer.gov/v1/graphql,"var assert = require('assert');

$http.post('https://trialcommons-dev.cancer.gov/v1/graphql/',
  {
    json: {
    query: '{ idsLists { case_ids } }'
    }
  },

  function (err, response, body) {

    if (err) {
        throw new Error(err);
    }

    console.log('Response:', body);
    console.log('Response:', response.statusCode);
    
    assert.equal(response.statusCode, 200, 'Expected a 200 OK response');    
    assert.ok('case_ids' in body.data.idsLists);
    assert.match(body.data.idsLists.case_ids[0], /CTDC-/);

  }
);",TRUE,C051XGDRQG6,,"alb,fargate,opensearch"
Clinical Trial Data Commons,ctdc,CRDC,Dev,Files,https://trialcommons-dev.cancer.gov/api/files,,TRUE,C051XGDRQG6,,"alb,fargate,opensearch"
Clinical Trial Data Commons,ctdc,CRDC,QA,Portal,https://trialcommons-qa.cancer.gov,,TRUE,C051XGDRQG6,,"alb,fargate,opensearch"
Clinical Trial Data Commons,ctdc,CRDC,QA,API,https://trialcommons-qa.cancer.gov/v1/graphql,"var assert = require('assert');

$http.post('https://trialcommons-qa.cancer.gov/v1/graphql/',
  {
    json: {
    query: '{ idsLists { case_ids } }'
    }
  },

  function (err, response, body) {
    
    if (err) {
        throw new Error(err);
    }

    console.log('Response:', body);
    console.log('Response:', response.statusCode);

    assert.equal(response.statusCode, 200, 'Expected a 200 OK response');    
    assert.ok('case_ids' in body.data.idsLists);
    assert.match(body.data.idsLists.case_ids[0], /CTDC-/);

  }
);",TRUE,C051XGDRQG6,,"alb,fargate,opensearch"
Clinical Trial Data Commons,ctdc,CRDC,QA,Files,https://trialcommons-qa.cancer.gov/api/files,,TRUE,C051XGDRQG6,,"alb,fargate,opensearch"
Canine Data Commons,icdc,CRDC,Dev,Portal,https://caninecommons-dev.cancer.gov,,TRUE,C04DYU071MG,,"alb,fargate,opensearch"
Canine Data Commons,icdc,CRDC,Dev,API,https://caninecommons-dev.cancer.gov/v1/graphql/,"var assert = require('assert');

$http.post('https://caninecommons-dev.cancer.gov/v1/graphql/',
  {
    json: {
    query: '{ numberOfStudies }'
    }
  },

  function (err, response, body) {
    
    if (err) {
        throw new Error(err);
    }

    console.log('Response:', body);
    console.log('Response:', response.statusCode);

    assert.equal(response.statusCode, 200, 'Expected a 200 OK response');    
    assert.ok('numberOfStudies' in body.data);

  }
);",TRUE,C04DYU071MG,,"alb,fargate,opensearch"
Canine Data Commons,icdc,CRDC,Dev,Files,https://caninecommons-dev.cancer.gov/api/files,,TRUE,C04DYU071MG,,"alb,fargate,opensearch"
Canine Data Commons,icdc,CRDC,QA,Portal,https://caninecommons-qa.cancer.gov,,TRUE,C04DYU071MG,,"alb,fargate,opensearch"
Canine Data Commons,icdc,CRDC,QA,API,https://caninecommons-qa.cancer.gov/v1/graphql/,"var assert = require('assert');

$http.post('https://caninecommons-qa.cancer.gov/v1/graphql/',
  {
    json: {
    query: '{ numberOfStudies }'
    }
  },

  function (err, response, body) {
    
    if (err) {
        throw new Error(err);
    }

    console.log('Response:', body);
    console.log('Response:', response.statusCode);

    assert.equal(response.statusCode, 200, 'Expected a 200 OK response');    
    assert.ok('numberOfStudies' in body.data);

  }
);",TRUE,C04DYU071MG,,"alb,fargate,opensearch"
Canine Data Commons,icdc,CRDC,QA,Files,https://caninecommons-qa.cancer.gov/api/files,,TRUE,C04DYU071MG,,"alb,fargate,opensearch"
Canine Data Commons,icdc,CRDC,Stage,Portal,https://caninecommons-stage.cancer.gov,,TRUE,C04DYU071MG,,"alb,fargate,opensearch"
Canine Data Commons,icdc,CRDC,Stage,API,https://caninecommons-stage.cancer.gov/v1/graphql/,"var assert = require('assert');

$http.post('https://caninecommons-stage.cancer.gov/v1/graphql/',
  {
    json: {
    query: '{ numberOfStudies }'
    }
  },

  function (err, response, body) {
    
    if (err) {
        throw new Error(err);
    }

    console.log('Response:', body);
    console.log('Response:', response.statusCode);

    assert.equal(response.statusCode, 200, 'Expected a 200 OK response');    
    assert.ok('numberOfStudies' in body.data);

  }
);",TRUE,C04DYU071MG,,"alb,fargate,opensearch"
Canine Data Commons,icdc,CRDC,Stage,Files,https://caninecommons-stage.cancer.gov/api/files,,TRUE,C04DYU071MG,,"alb,fargate,opensearch"
Canine Data Commons,icdc,CRDC,Prod,Portal,https://caninecommons.cancer.gov,,FALSE,C04E1C69JBE,,"alb,fargate,opensearch"
Canine Data Commons,icdc,CRDC,Prod,API,https://caninecommons.cancer.gov/v1/graphql/,"var assert = require('assert');

$http.post('https://caninecommons.cancer.gov/v1/graphql/',
  {
    json: {
    query: '{ numberOfStudies }'
    }
  },

  function (err, response, body) {
    
    if (err) {
        throw new Error(err);
    }

    console.log('Response:', body);
    console.log('Response:', response.statusCode);

    assert.equal(response.statusCode, 200, 'Expected a 200 OK response');    
    assert.ok('numberOfStudies' in body.data);

  }
);",FALSE,C04E1C69JBE,,"alb,fargate,opensearch"
Canine Data Commons,icdc,CRDC,Prod,Files,https://caninecommons.cancer.gov/api/files,,FALSE,C04E1C69JBE,,"alb,fargate,opensearch"
Molecular Targets Platform,mtp,CCDI,Dev,Portal,https://moleculartargets-dev.ccdi.cancer.gov,,TRUE,C049VAHBKDL,,"alb,fargate,opensearch"
Molecular Targets Platform,mtp,CCDI,QA,Portal,https://moleculartargets-qa.ccdi.cancer.gov,,TRUE,C049VAHBKDL,,"alb,fargate,opensearch"
Molecular Targets Platform,mtp,CCDI,Stage,Portal,https://moleculartargets-stage.ccdi.cancer.gov,,TRUE,C049Z0RVCCD,,"alb,fargate,opensearch"
Molecular Targets Platform,mtp,CCDI,Prod,Portal,https://moleculartargets.ccdi.cancer.gov,,TRUE,C049Z0RVCCD,,"alb,fargate,opensearch"
Index of NCI Studies,ins,CCDI,Dev,Portal,https://studycatalog-dev.cancer.gov,,TRUE,C04693BUC9M,,"alb,fargate,opensearch"
Index of NCI Studies,ins,CCDI,Dev,API,https://studycatalog-dev.cancer.gov/v1/graphql,"var assert = require('assert');

$http.post('https://studycatalog-dev.cancer.gov/v1/graphql/',
  {
    json: {
    query: '{ idsLists { case_ids } }'
    }
  },

  function (err, response, body) {
    
    if (err) {
        throw new Error(err);
    }

    console.log('Response:', body);
    console.log('Response:', response.statusCode);

    assert.equal(response.statusCode, 200, 'Expected a 200 OK response');    
    assert.ok('case_ids' in body.data.idsLists);
    assert.match(body.data.idsLists.case_ids[0], /INS-/);
  }
);",TRUE,C04693BUC9M,,"alb,fargate,opensearch"
Index of NCI Studies,ins,CCDI,QA,Portal,https://studycatalog-qa.cancer.gov,,TRUE,C04693BUC9M,,"alb,fargate,opensearch"
Index of NCI Studies,ins,CCDI,QA,API,https://studycatalog-qa.cancer.gov/v1/graphql,"var assert = require('assert');

$http.post('https://studycatalog-qa.cancer.gov/v1/graphql/',
  {
    json: {
    query: '{ idsLists { case_ids } }'
    }
  },

  function (err, response, body) {
    
    if (err) {
        throw new Error(err);
    }

    console.log('Response:', body);
    console.log('Response:', response.statusCode);

    assert.equal(response.statusCode, 200, 'Expected a 200 OK response');    
    assert.ok('case_ids' in body.data.idsLists);
    assert.match(body.data.idsLists.case_ids[0], /INS-/);
  }
);",TRUE,C04693BUC9M,,"alb,fargate,opensearch"
Index of NCI Studies,ins,CCDI,Stage,Portal,https://studycatalog-stage.cancer.gov,,TRUE,C04693BUC9M,,"alb,fargate,opensearch"
Index of NCI Studies,ins,CCDI,Stage,API,https://studycatalog-stage.cancer.gov/v1/graphql,"var assert = require('assert');

$http.post('https://studycatalog-stage.cancer.gov/v1/graphql/',
  {
    json: {
    query: '{ idsLists { case_ids } }'
    }
  },

  function (err, response, body) {
    
    if (err) {
        throw new Error(err);
    }

    console.log('Response:', body);
    console.log('Response:', response.statusCode);

    assert.equal(response.statusCode, 200, 'Expected a 200 OK response');    
    assert.ok('case_ids' in body.data.idsLists);
    assert.match(body.data.idsLists.case_ids[0], /INS-/);
  }
);",TRUE,C04693BUC9M,,"alb,fargate,opensearch"
Index of NCI Studies,ins,CCDI,Prod,Portal,https://studycatalog.cancer.gov,,TRUE,C04693BUC9M,,"alb,fargate,opensearch"
Index of NCI Studies,ins,CCDI,Prod,API,https://studycatalog.cancer.gov/v1/graphql,"var assert = require('assert');

$http.post('https://studycatalog.cancer.gov/v1/graphql/',
  {
    json: {
    query: '{ idsLists { case_ids } }'
    }
  },

  function (err, response, body) {
    
    if (err) {
        throw new Error(err);
    }

    console.log('Response:', body);
    console.log('Response:', response.statusCode);

    assert.equal(response.statusCode, 200, 'Expected a 200 OK response');    
    assert.ok('case_ids' in body.data.idsLists);
    assert.match(body.data.idsLists.case_ids[0], /INS-/);
  }
);",TRUE,C04693BUC9M,,"alb,fargate,opensearch"
Childhood Cancer Data Catalog,ccdc,CCDI,Dev,Portal,https://datacatalog-dev.ccdi.cancer.gov,,TRUE,C049VAP8DEJ,,"alb,fargate,opensearch"
Childhood Cancer Data Catalog,ccdc,CCDI,QA,Portal,https://datacatalog-qa.ccdi.cancer.gov,,TRUE,C049VAP8DEJ,,"alb,fargate,opensearch"
Childhood Cancer Data Catalog,ccdc,CCDI,Stage,Portal,https://datacatalog-stage.ccdi.cancer.gov,,TRUE,C049VAP8DEJ,,"alb,fargate,opensearch"
Childhood Cancer Data Catalog,ccdc,CCDI,Prod,Portal,https://datacatalog.ccdi.cancer.gov,,TRUE,C049VAP8DEJ,,"alb,fargate,opensearch"
Cancer Research Data Commons Hub,crdc-hub,CRDC,Dev,API,https://hub-dev.datacommons.cancer.gov/version,"var assert = require('assert');

$http.get('https://hub-dev.datacommons.cancer.gov/version',
function (err, response, body) { 
    
    if (err) {
        throw new Error(err);
    }

console.log('Response:', body); 
console.log('Response:', response.statusCode); 

assert.equal(response.statusCode, 200, 'Expected a 200 OK response'); 

dateObject = new Date(body.date); 
assert.ok(dateObject.getTime() === dateObject.getTime()); 

} );",TRUE,C05KUCFPV50,,"alb,fargate"
Cancer Research Data Commons Hub,crdc-hub,CRDC,QA,Portal,https://hub-qa.datacommons.cancer.gov,,TRUE,C05KUCFPV50,,"alb,fargate"
Cancer Research Data Commons Hub,crdc-hub,CRDC,Stage,Portal,https://hub-stage.datacommons.cancer.gov,,TRUE,C05KUCFPV50,,"alb,fargate"
Cancer Research Data Commons Hub,crdc-hub,CRDC,Prod,Portal,https://hub.datacommons.cancer.gov,,FALSE,C05LJ3E72V6,,"alb,fargate"
